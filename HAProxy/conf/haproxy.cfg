#
# Simple configuration for an HTTP proxy listening on port 80 on all
# interfaces and forwarding requests to a three backend "servers" listening on
# port 80:
#
#                                    +----------+
#                   [--------------> |   web1   |   172.31.10.11:80
#                   |                +----------+
#  172.31.10.20:80  |
#       +---------+ |                +----------+
#       | HAProxy | |--------------> |   web2   |   172.31.10.12:80
#       +---------+ |                +----------+
#                   |
#                   |                +----------+
#                   [--------------> |   web3   |   172.31.10.13:80
#                                    +----------+
#

global
    daemon
    maxconn 256
    log syslog1:514 local0 info

# defines settings that are shared across all sections that follow
defaults
    mode http  # either http or tcp
    timeout connect 4000ms
    timeout client 4000ms
    timeout server 4000ms
    timeout http-request 4000ms
    log global
    option httplog

# frontend receives traffic before dispatching it to a backend
frontend http-in
    bind *:80
    default_backend web_servers
    maxconn         8000
    timeout client  4000ms
#
#    # layer3: Valid users
#    # acl allow_host src 172.31.10.10/32
#    # http-request deny if !allow_host
#

# backend is a pool of web or application servers
# servers in the backend will receive the request, form a response,
# and sends the response back through HAProxy to the client.
backend web_servers
    server web1 172.31.10.11:80 maxconn 32 check
    server web2 172.31.10.12:80 maxconn 32 check
    server web3 172.31.10.13:80 maxconn 32 check

# https://hub.docker.com/_/haproxy/
#
# great start
# https://www.haproxy.com/blog/haproxy-configuration-basics-load-balance-your-servers/
# https://www.haproxy.com/blog/introduction-to-haproxy-logging/
#
